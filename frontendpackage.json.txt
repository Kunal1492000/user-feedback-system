// frontend/package.json
{
  "name": "feedback-system-frontend",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "axios": "^1.5.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.15.0",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

// frontend/public/index.html
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="User Feedback System - Collect and manage user feedback"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <title>User Feedback System</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
  </body>
</html>

// frontend/src/index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// frontend/src/index.css
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #f8f9fa;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

// frontend/src/App.js
import React from 'react';
import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';
import Dashboard from './pages/Dashboard';
import SubmitFeedback from './pages/SubmitFeedback';
import './App.css';

function App() {
  return (
    <Router>
      <div className="App">
        <header>
          <h1>User Feedback System</h1>
          <nav>
            <ul>
              <li>
                <Link to="/">Submit Feedback</Link>
              </li>
              <li>
                <Link to="/dashboard">Dashboard</Link>
              </li>
            </ul>
          </nav>
        </header>
        <main>
          <Routes>
            <Route path="/" element={<SubmitFeedback />} />
            <Route path="/dashboard" element={<Dashboard />} />
          </Routes>
        </main>
      </div>
    </Router>
  );
}

export default App;

// frontend/src/App.css
.App {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 20px;
  border-bottom: 1px solid #eee;
}

header h1 {
  margin: 0;
  color: #333;
}

nav ul {
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0;
}

nav ul li {
  margin-left: 20px;
}

nav ul li a {
  text-decoration: none;
  color: #007bff;
  font-weight: 500;
}

nav ul li a:hover {
  color: #0056b3;
}

.form-group {
  margin-bottom: 15px;
}

.form-group label {
  display: block;
  margin-bottom: 5px;
  font-weight: 500;
}

input, select, textarea {
  width: 100%;
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 16px;
}

textarea {
  height: 150px;
  resize: vertical;
}

.btn {
  padding: 10px 15px;
  background: #4CAF50;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 16px;
}

.btn:hover {
  background: #45a049;
}

.alert {
  padding: 10px;
  background: #d4edda;
  color: #155724;
  border-radius: 4px;
  margin-bottom: 15px;
}

.feedback-item {
  background: #f9f9f9;
  padding: 15px;
  margin-bottom: 15px;
  border-radius: 4px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.feedback-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
}

.feedback-header h3 {
  margin: 0;
}

.category {
  background: #007bff;
  color: white;
  padding: 3px 8px;
  border-radius: 12px;
  font-size: 0.8rem;
}

.date {
  color: #6c757d;
  font-size: 0.9rem;
}

.email {
  color: #6c757d;
  font-size: 0.9rem;
  margin-top: 10px;
}

.filter-sort {
  display: flex;
  justify-content: space-between;
  margin-bottom: 20px;
  background: #fff;
  padding: 15px;
  border-radius: 4px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.dashboard h2, .submit-feedback h2 {
  margin-bottom: 20px;
}

// frontend/src/components/FeedbackForm.js
import React, { useState } from 'react';
import axios from 'axios';

const FeedbackForm = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    text: '',
    category: 'other'
  });
  const [message, setMessage] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  
  const { name, email, text, category } = formData;
  
  const onChange = e => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };
  
  const onSubmit = async e => {
    e.preventDefault();
    setIsSubmitting(true);
    try {
      await axios.post('http://localhost:5000/api/feedback', formData);
      setMessage('Feedback submitted successfully');
      setFormData({
        name: '',
        email: '',
        text: '',
        category: 'other'
      });
      setTimeout(() => setMessage(''), 3000);
    } catch (error) {
      setMessage('Error submitting feedback: ' + (error.response?.data?.error || error.message));
    } finally {
      setIsSubmitting(false);
    }
  };
  
  return (
    <div className="feedback-form">
      <h2>Submit Feedback</h2>
      {message && <div className="alert">{message}</div>}
      <form onSubmit={onSubmit}>
        <div className="form-group">
          <label htmlFor="name">Name</label>
          <input
            type="text"
            id="name"
            name="name"
            value={name}
            onChange={onChange}
            required
          />
        </div>
        <div className="form-group">
          <label htmlFor="email">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            value={email}
            onChange={onChange}
            required
          />
        </div>
        <div className="form-group">
          <label htmlFor="category">Category</label>
          <select
            id="category"
            name="category"
            value={category}
            onChange={onChange}
          >
            <option value="suggestion">Suggestion</option>
            <option value="bug">Bug Report</option>
            <option value="feature">Feature Request</option>
            <option value="other">Other</option>
          </select>
        </div>
        <div className="form-group">
          <label htmlFor="text">Feedback</label>
          <textarea
            id="text"
            name="text"
            value={text}
            onChange={onChange}
            required
          ></textarea>
        </div>
        <button 
          type="submit" 
          className="btn" 
          disabled={isSubmitting}
        >
          {isSubmitting ? 'Submitting...' : 'Submit Feedback'}
        </button>
      </form>
    </div>
  );
};

export default FeedbackForm;

// frontend/src/components/FilterSort.js
import React from 'react';

const FilterSort = ({ onFilterChange, onSortChange }) => {
  return (
    <div className="filter-sort">
      <div className="filter">
        <label htmlFor="category-filter">Filter by Category:</label>
        <select 
          id="category-filter" 
          onChange={e => onFilterChange(e.target.value)}
        >
          <option value="">All Categories</option>
          <option value="suggestion">Suggestion</option>
          <option value="bug">Bug Report</option>
          <option value="feature">Feature Request</option>
          <option value="other">Other</option>
        </select>
      </div>
      <div className="sort">
        <label htmlFor="sort">Sort by:</label>
        <select 
          id="sort" 
          onChange={e => onSortChange(e.target.value)}
        >
          <option value="latest">Latest First</option>
          <option value="oldest">Oldest First</option>
        </select>
      </div>
    </div>
  );
};

export default FilterSort;

// frontend/src/components/FeedbackList.js
import React from 'react';

const FeedbackList = ({ feedback }) => {
  if (feedback.length === 0) {
    return <p>No feedback found.</p>;
  }
  
  return (
    <div className="feedback-list">
      {feedback.map(item => (
        <div key={item._id} className="feedback-item">
          <div className="feedback-header">
            <h3>{item.name}</h3>
            <span className="category">{item.category}</span>
            <span className="date">
              {new Date(item.createdAt).toLocaleDateString()}
            </span>
          </div>
          <p>{item.text}</p>
          <p className="email">{item.email}</p>
        </div>
      ))}
    </div>
  );
};

export default FeedbackList;

// frontend/src/components/Header.js
import React from 'react';
import { Link } from 'react-router-dom';

const Header = () => {
  return (
    <header>
      <h1>User Feedback System</h1>
      <nav>
        <ul>
          <li>
            <Link to="/">Submit Feedback</Link>
          </li>
          <li>
            <Link to="/dashboard">Dashboard</Link>
          </li>
        </ul>
      </nav>
    </header>
  );
};

export default Header;

// frontend/src/pages/Dashboard.js
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import FeedbackList from '../components/FeedbackList';
import FilterSort from '../components/FilterSort';

const Dashboard = () => {
  const [feedback, setFeedback] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [filter, setFilter] = useState('');
  const [sort, setSort] = useState('latest');
  
  useEffect(() => {
    const fetchFeedback = async () => {
      try {
        let url = 'http://localhost:5000/api/feedback?';
        
        if (filter) {
          url += `category=${filter}&`;
        }
        
        if (sort === 'latest') {
          url += 'sortBy=createdAt&order=desc';
        } else {
          url += 'sortBy=createdAt&order=asc';
        }
        
        const res = await axios.get(url);
        setFeedback(res.data.data);
        setLoading(false);
      } catch (error) {
        console.error(error);
        setError('Error fetching feedback data');
        setLoading(false);
      }
    };
    
    fetchFeedback();
  }, [filter, sort]);
  
  const handleFilterChange = (category) => {
    setFilter(category);
  };
  
  const handleSortChange = (sortOption) => {
    setSort(sortOption);
  };
  
  if (loading) {
    return <div>Loading feedback data...</div>;
  }
  
  if (error) {
    return <div className="alert" style={{background: '#f8d7da', color: '#721c24'}}>{error}</div>;
  }
  
  return (
    <div className="dashboard">
      <h2>Feedback Dashboard</h2>
      <FilterSort 
        onFilterChange={handleFilterChange} 
        onSortChange={handleSortChange} 
      />
      <FeedbackList feedback={feedback} />
    </div>
  );
};

export default Dashboard;

// frontend/src/pages/SubmitFeedback.js
import React from 'react';
import FeedbackForm from '../components/FeedbackForm';

const SubmitFeedback = () => {
  return (
    <div className="submit-feedback">
      <FeedbackForm />
    </div>
  );
};

export default SubmitFeedback;